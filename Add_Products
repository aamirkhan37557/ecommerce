// as we will use same name so route name will be route name to stay safe from error route model binding :)

//create model controller and migration for product note in constrained add the table name 
---------------------------------start of migration------------------------------------
             $table->integer('brand_id');
              $table->foreignId('category_id')->constrained('categories')
             ->onUpdate('cascade')->onDelete('cascade');
              $table->foreignId('sub_category_id')->constrained('sub__categories')
             ->onUpdate('cascade')->onDelete('cascade');
              $table->foreignId('Subsubcat_id')->constrained('subsubcats')
             ->onUpdate('cascade')->onDelete('cascade');
             $table->string('product_name_en');
            $table->string('product_name_hin');
            $table->string('product_slug_en');
            $table->string('product_slug_hin');
            $table->string('product_code');
            $table->string('product_qty');
            $table->string('product_tags_en');
            $table->string('product_tags_hin');
            $table->string('product_size_en')->nullable();
            $table->string('product_size_hin')->nullable();
            $table->string('product_color_en');
            $table->string('product_color_hin');
            $table->string('selling_price');
            $table->string('discount_price')->nullable();
            $table->string('short_descp_en');
            $table->string('short_descp_hin');
            $table->string('long_descp_en');
            $table->string('long_descp_hin');
            $table->string('product_thambnail');
            $table->integer('hot_deals')->nullable();
            $table->integer('featured')->nullable();
            $table->integer('special_offer')->nullable();
            $table->integer('special_deals')->nullable();
            $table->integer('status')->default(0);
            
--------------end of product migration-------------------------------------------------------------------------------------------  

//run php artisan migrate

//make the mode protected fillable our protected guarded

//create the  resource route having same name as model name for route model biniding free error

//create the link to add/create  and view/display  products in menu 

//now go to the controller create function and there redirect to the view which you want to create for add products
// create the .blade.php to create or add product


// now display the product based on select for tham go to dependent dropdwon using vuejs in this folder 

// there use form which will for both create and edit  as we had same name for model and resource route thats why 

 <form action= "{{ isset($Products) ? route('Products.update',$Products->id) : route('Products.store') }}" method="post" enctype="multipart/form-data"> 

             @csrf
              @if(isset($Products))
        @method('PUT')
      @endif
      
      //for values
       value="{{ isset($Products) ? $Products->subsubcategory_name_hin : '' }}"
       //for button
        {{ isset($Products) ? 'Edit' : 'Add' }} 
        
        //for dependent drop down go to the dependentdropvue in ecommerce github
        
        //now we will store the value 
        
        // here we had a situation we will insert data into multiple table it is product table and product id s foreign key for that we will need product id
        for that purpose we will use modelname::insertGetId and assig it into variable to get this table id
        
        
        //   inserting products table data start ------------------------------------------------------------------------------------
        
         $image = $request->file('tHUNMNAIL');
        $name_gen = hexdec(uniqid()).'.'.$image->getClientOriginalExtension();
        Image::make($image)->resize(917,1000)->save('thambnail/'.$name_gen);
        $save_url = 'thambnail/'.$name_gen;

      $product_id = Products::insertGetId([
        'brand_id' => $request->brand,
        'category_id' => $request->category_id,
        'sub_category_id' => $request->sub_id,
        'Subsubcat_id' => $request->subsub_id,
        'product_name_en' => $request->peng,
        'product_name_hin' => $request->phindi,
        'product_slug_en' =>  strtolower(str_replace(' ', '-', $request->peng)),
        'product_slug_hin' => str_replace(' ', '-', $request->phindi),
        'product_code' => $request->code,

        'product_qty' => $request->quantity,
        'product_tags_en' => $request->tagse,
        'product_tags_hin' => $request->tagsh,
        'product_size_en' => $request->tagsse,
        'product_size_hin' => $request->tagssh,
        'product_color_en' => $request->tagsce,
        'product_color_hin' => $request->tagsch,

        'selling_price' => $request->price,
        'discount_price' => $request->discount,
        'short_descp_en' => $request->seng,
        'short_descp_hin' => $request->shini,
        'long_descp_en' => $request->leng,
        'long_descp_hin' => $request->lhindi,

        'hot_deals' => $request->hot,
        'featured' => $request->feature,
        'special_offer' => $request->Specialsoffer,
        'special_deals' => $request->sepealdeals,

        'product_thambnail' => $save_url,
        'status' => 1,
        'created_at' => Carbon::now(),   

      ]);
      
      // now we will insert data inmultiple table using same controller as we had multiple table for that we will loop thorugh it and will use this data 
        //now as we are inserting multiple image from antoher table so for that 
      $images = $request->file('multiple');
      foreach ($images as $img) {
        //here we loop through it and insert all the data 
        $make_name = hexdec(uniqid()).'.'.$img->getClientOriginalExtension();
        Image::make($img)->resize(917,1000)->save('multiple/'.$make_name);
        $uploadPath = 'multiple/'.$make_name;

            mulitiple::create([

            'products_id' => $product_id,
            'photo_name' => $uploadPath,
            'created_at' => Carbon::now(), 

        ]);

      //
    }
        
        
          //   inserting products table data end ------------------------------------------------------------------------------------


